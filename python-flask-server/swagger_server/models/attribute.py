# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from swagger_server.models.base_model_ import Model
from swagger_server import util


class Attribute(Model):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """

    def __init__(self, name: str=None, value: str=None, source: str=None):  # noqa: E501
        """Attribute - a model defined in Swagger

        :param name: The name of this Attribute.  # noqa: E501
        :type name: str
        :param value: The value of this Attribute.  # noqa: E501
        :type value: str
        :param source: The source of this Attribute.  # noqa: E501
        :type source: str
        """
        self.swagger_types = {
            'name': str,
            'value': str,
            'source': str
        }

        self.attribute_map = {
            'name': 'name',
            'value': 'value',
            'source': 'source'
        }

        self._name = name
        self._value = value
        self._source = source

    @classmethod
    def from_dict(cls, dikt) -> 'Attribute':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The attribute of this Attribute.  # noqa: E501
        :rtype: Attribute
        """
        return util.deserialize_model(dikt, cls)

    @property
    def name(self) -> str:
        """Gets the name of this Attribute.


        :return: The name of this Attribute.
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name: str):
        """Sets the name of this Attribute.


        :param name: The name of this Attribute.
        :type name: str
        """

        self._name = name

    @property
    def value(self) -> str:
        """Gets the value of this Attribute.


        :return: The value of this Attribute.
        :rtype: str
        """
        return self._value

    @value.setter
    def value(self, value: str):
        """Sets the value of this Attribute.


        :param value: The value of this Attribute.
        :type value: str
        """

        self._value = value

    @property
    def source(self) -> str:
        """Gets the source of this Attribute.


        :return: The source of this Attribute.
        :rtype: str
        """
        return self._source

    @source.setter
    def source(self, source: str):
        """Sets the source of this Attribute.


        :param source: The source of this Attribute.
        :type source: str
        """

        self._source = source
