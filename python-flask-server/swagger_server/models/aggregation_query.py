# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from swagger_server.models.base_model_ import Model
from swagger_server import util


class AggregationQuery(Model):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """

    def __init__(self, operation: str=None, gene_list_ids: List[str]=None):  # noqa: E501
        """AggregationQuery - a model defined in Swagger

        :param operation: The operation of this AggregationQuery.  # noqa: E501
        :type operation: str
        :param gene_list_ids: The gene_list_ids of this AggregationQuery.  # noqa: E501
        :type gene_list_ids: List[str]
        """
        self.swagger_types = {
            'operation': str,
            'gene_list_ids': List[str]
        }

        self.attribute_map = {
            'operation': 'operation',
            'gene_list_ids': 'gene_list_ids'
        }

        self._operation = operation
        self._gene_list_ids = gene_list_ids

    @classmethod
    def from_dict(cls, dikt) -> 'AggregationQuery':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The aggregation_query of this AggregationQuery.  # noqa: E501
        :rtype: AggregationQuery
        """
        return util.deserialize_model(dikt, cls)

    @property
    def operation(self) -> str:
        """Gets the operation of this AggregationQuery.


        :return: The operation of this AggregationQuery.
        :rtype: str
        """
        return self._operation

    @operation.setter
    def operation(self, operation: str):
        """Sets the operation of this AggregationQuery.


        :param operation: The operation of this AggregationQuery.
        :type operation: str
        """

        self._operation = operation

    @property
    def gene_list_ids(self) -> List[str]:
        """Gets the gene_list_ids of this AggregationQuery.


        :return: The gene_list_ids of this AggregationQuery.
        :rtype: List[str]
        """
        return self._gene_list_ids

    @gene_list_ids.setter
    def gene_list_ids(self, gene_list_ids: List[str]):
        """Sets the gene_list_ids of this AggregationQuery.


        :param gene_list_ids: The gene_list_ids of this AggregationQuery.
        :type gene_list_ids: List[str]
        """

        self._gene_list_ids = gene_list_ids
