# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from swagger_server.models.base_model_ import Model
from swagger_server.models.gene_info import GeneInfo  # noqa: F401,E501
from swagger_server import util


class GeneList(Model):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """

    def __init__(self, gene_list_id: str=None, genes: List[GeneInfo]=None):  # noqa: E501
        """GeneList - a model defined in Swagger

        :param gene_list_id: The gene_list_id of this GeneList.  # noqa: E501
        :type gene_list_id: str
        :param genes: The genes of this GeneList.  # noqa: E501
        :type genes: List[GeneInfo]
        """
        self.swagger_types = {
            'gene_list_id': str,
            'genes': List[GeneInfo]
        }

        self.attribute_map = {
            'gene_list_id': 'gene_list_id',
            'genes': 'genes'
        }

        self._gene_list_id = gene_list_id
        self._genes = genes

    @classmethod
    def from_dict(cls, dikt) -> 'GeneList':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The gene_list of this GeneList.  # noqa: E501
        :rtype: GeneList
        """
        return util.deserialize_model(dikt, cls)

    @property
    def gene_list_id(self) -> str:
        """Gets the gene_list_id of this GeneList.


        :return: The gene_list_id of this GeneList.
        :rtype: str
        """
        return self._gene_list_id

    @gene_list_id.setter
    def gene_list_id(self, gene_list_id: str):
        """Sets the gene_list_id of this GeneList.


        :param gene_list_id: The gene_list_id of this GeneList.
        :type gene_list_id: str
        """

        self._gene_list_id = gene_list_id

    @property
    def genes(self) -> List[GeneInfo]:
        """Gets the genes of this GeneList.


        :return: The genes of this GeneList.
        :rtype: List[GeneInfo]
        """
        return self._genes

    @genes.setter
    def genes(self, genes: List[GeneInfo]):
        """Sets the genes of this GeneList.


        :param genes: The genes of this GeneList.
        :type genes: List[GeneInfo]
        """

        self._genes = genes
